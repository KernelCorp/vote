.Show_Voting.active
  %h1.voting_header= @voting.name
  .row
    .col.left_part
      = render 'votings/show/left_part'

    .col.right_part
      .lead_phone
        .lead_phone_leader
          = raw( t 'voting.show.lead_phone' )
          = @voting.claims.length

        .lead_number.lead__ 7
        - @phone_number.each_with_index do | number, i |
          .lead_number{ class: "lead_#{i}" }= number

      .Voting_Phones#your_phones
        - group_under_4 = false
        - @sorted_phones_with_checks.reverse.each_with_index do | phone_group, anticount |
          - count = 10 - anticount
          
          - if !phone_group.empty?
            - if count > 4
              %h3.your_phones_header
                %span= t 'voting.show.your_phone_in_which'
                .star= count
                %span= t 'voting.show.numbers'
            - elsif !group_under_4
              %h3.your_phones_header= t 'voting.show.matches_less_than_four'
              - group_under_4 = true


          - phone_group.each do | phone |
            .row.your_phone
              .col.your_phone_place 
                7 
                = t 'voting.show.place'
              .col.your_phone_number
                .number.number__ 7
                - phone[:numbers].each_with_index do | number, i |
                  .number{ class: "number_#{i} #{ number[1] ? 'number_green' : 'number_red' }" }= number[0]

              - if anticount != 0
                .col.your_phone_vote
                  .row
                    .col.matches
                      = t 'voting.show.vote_to'
                      %br
                      = count + 1
                      = t 'voting.show.to_matches'
                    .col.button.mini
                  .button.big_one= t 'voting.show.vote'

      .show_or_add.row
        %a.col.show= t 'voting.show.show_all_phones'
        %a.col.add= t 'voting.show.add_phone'

      :javascript
        $('.Show_Voting .show_or_add .add').on('click', function(){
          $('.Show_Voting').addClass('add_phone');
        });

      = form_for Claim.new,
        url: voting_claims_path( params[:id] ), method: 'post', 
        remote: true, format: :json,
        html: { class: 'form join' } do |f|
        %h2.join_header= t 'voting.show.join.header'
        .join_description= t 'voting.show.join.description'
        .join_input
          = f.label :phone
          %br
          %input#phone_holder{ type: 'text', data: { leader: @phone_number.join } }
          = f.hidden_field :phone
        .join_coincedence
          .join_coincedence_orange
            %span
          = t 'voting.show.join.matches'
        = f.submit t('voting.show.join.take_part')

      :javascript
        (function(){
          var join_coincedence = $('.join_coincedence');
          join_coincedence.hide();

          function count_matches( x, y ){
            var count = 0;
            var length = Math.max( x.length, y.length );
            for( var i = 0; i < length; i++ ){
              if( x[i] == y[i] ) count++;
            }
            return count;
          }

          function phone_regexp( element ){
            if( element.val().length ){
              var matches = element.val().match(/^\+7-([\d_]{3})-([\d_]{3})-([\d_]{2})-([\d_]{2})$/);
              var x = matches[1] + matches[2] + matches[3] + matches[4];
              element.next().val( x );
              join_coincedence.show()
              .find('.join_coincedence_orange span')
              .text(count_matches( x, element.data('leader') ) + '/10');
            } else {
              element.next().val('');
              join_coincedence.hide();
            }
          }

          jQuery(function($){
            $('#phone_holder')
            .mask("+7-999-999-99-99", {
              completed: function(){
                phone_regexp( this );
              }
            })
            .on('change', function(){
              phone_regexp( $(this) );
            })
            .on('keyup', function(){
              phone_regexp( $(this) );
            });
          });
        })();

      :javascript
        $('#your_phones').on('mousedown', '.big_one', function(){
          var popup = $('#app_smoke, #app_popup_absolute');
          popup.fadeIn( 500 );

          $('#Active_Voting_Popup .cross').one('mousedown', function(){
            popup.fadeOut( 500 );
          });
        });

- content_for :layout_bottom do
  #app_smoke

  #app_popup_absolute
    .app_div
      .popup#Active_Voting_Popup
        .cross &#10006;
        %h1 Голосование за номер
        .leader_compare
          .number.number__ 7

          .number.number_0.number_grey
            .place.place_0
              .triangle
              8 место
            8
          .number.number_1.number_red
            .place.place_1
              .triangle
              8 место
            8
          .number.number_2.number_red
            .place.place_2
              .triangle
              8 место
            8
          .number.number_3.number_grey
            .place.place_3
              .triangle
              8 место
            8
          .number.number_4.number_red
            .place.place_4
              .triangle
              8 место
            8
          .number.number_5.number_grey
            .place.place_5
              .triangle
              8 место
            8
          .number.number_6.number_red 
            .place.place_6
              .triangle
              8 место
            8
          .number.number_7.number_grey
            .place.place_7
              .triangle
              8 место
            8
          .number.number_8.number_grey
            .place.place_8
              .triangle
              8 место
            8
          .number.number_9.number_grey 
            .place.place_9
              .triangle
              8 место
            8

        .Voting_Phones
          - @sorted_phones_with_checks.reverse.each_with_index do | phone_group, anticount |
            - count = 10 - anticount
            
            - phone_group.each do | phone |
              .row.your_phone.phone_to_leader
                .col.your_phone_number
                  .number.number__ 7
                  - phone[:numbers].each_with_index do | number, i |
                    .number{ class: "number_#{i} #{ number[1] ? 'number_green' : 'number_red' }" }= number[0]

                - if anticount != 0
                  .col.your_phone_vote
                    .row
                      .col.matches
                        голосов за совпадения
                      .col.button.mini
                    .button.big_one= t 'voting.show.vote'

          - @sorted_phones_with_checks.reverse.each_with_index do | phone_group, anticount |
            - count = 10 - anticount
            
            - phone_group.each do | phone |
              .row.your_phone
                .col.your_phone_number
                  .number.number__ 7
                  - phone[:numbers].each_with_index do | number, i |
                    .number{ class: "number_#{i} #{ number[1] ? 'number_green' : 'number_red' }" }= number[0]

                - if anticount != 0
                  .col.your_phone_vote
                    .row
                      .col.matches
                        голосов за совпадения
                      .col.button.mini
                    .button.big_one= t 'voting.show.vote'

          .your_phones_header
            Укажите свое количество голосов

          .row.choose_yourself
          = form_for AtomVote.new, 
            url: session_path('participant'), method: 'post',
            remote: true, format: :json, 
            html: { class: 'form row choose_yourself' } do |f|
            .col.choose_votes
              .choose_votes_changer -
              = f.text_field :votes_count
              .choose_votes_changer +
            = f.submit 'Проголосовать за этот номер', class: 'col'