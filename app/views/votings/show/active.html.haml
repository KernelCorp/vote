.Show_Voting.active
  %h1.voting_header= @voting.name
  .row
    .col.left_part
      = render 'votings/show/left_part'

    .col.right_part
      .lead_phone
        .lead_phone_leader
          = raw( t 'voting.show.lead_phone' )
          = @voting.claims.length

        .lead_number.lead__ 7
        - @lead_phone_number.each_with_index do | number, i |
          .lead_number{ class: "lead_#{i}" }= number

      .Voting_Phones#your_phones
        - group_under_4 = false
        - @sorted_phones_with_checks.reverse.each_with_index do | phone_group, anticount |
          - count = 10 - anticount
          
          - if !phone_group.empty?
            - if count > 4
              %h3.your_phones_header
                %span= t 'voting.show.your_phone_in_which'
                .star= count
                %span= t 'voting.show.numbers'
            - elsif !group_under_4
              %h3.your_phones_header= t 'voting.show.matches_less_than_four'
              - group_under_4 = true


          - phone_group.each do | phone |
            .row.your_phone{ data: { id: phone[:id] } }
              .col.your_phone_place
                = phone[:place]
                = t 'voting.show.place'
              .col.your_phone_number
                .number.number__ 7

                .for_js
                  - phone[:numbers].each_with_index do | number, i |
                    .number{ class: "number_#{i}", data: { place: number[1], points_to_first: number[2] } }= number[0]

              - if anticount != 0
                .col.your_phone_vote
                  .row
                    .col.matches
                      = t 'voting.show.vote_to'
                      %br
                      = count + 1
                      = t 'voting.show.to_matches'
                    .col.button.mini
                  .button.big_one= t 'voting.show.vote'

      .show_or_add.row
        %a.col.show= t 'voting.show.show_all_phones'
        %a.col.add= t 'voting.show.add_phone'

      :javascript
        $('.Show_Voting .show_or_add .add').on('click', function(){
          $('.Show_Voting').addClass('add_phone');
        });

      = form_for Claim.new,
        url: voting_claims_path( params[:id] ), method: 'post', 
        remote: true, format: :json,
        html: { class: 'form join' } do |f|
        %h2.join_header= t 'voting.show.join.header'
        .join_description= t 'voting.show.join.description'
        .join_input
          = f.label :phone
          %br
          %input#phone_holder{ type: 'text', data: { leader: @lead_phone_number.join } }
          = f.hidden_field :phone
        .join_coincedence
          .join_coincedence_orange
            %span
          = t 'voting.show.join.matches'
        = f.submit t('voting.show.join.take_part')

      :javascript
        (function(){
          var join_coincedence = $('.join_coincedence');
          join_coincedence.hide();

          function count_matches( x, y ){
            var count = 0;
            var length = Math.max( x.length, y.length );
            for( var i = 0; i < length; i++ ){
              if( x[i] == y[i] ) count++;
            }
            return count;
          }

          function phone_regexp( element ){
            if( element.val().length ){
              var matches = element.val().match(/^\+7-([\d_]{3})-([\d_]{3})-([\d_]{2})-([\d_]{2})$/);
              var x = matches[1] + matches[2] + matches[3] + matches[4];
              element.next().val( x );
              join_coincedence.show()
              .find('.join_coincedence_orange span')
              .text(count_matches( x, element.data('leader') ) + '/10');
            } else {
              element.next().val('');
              join_coincedence.hide();
            }
          }

          jQuery(function($){
            $('#phone_holder')
            .mask("+7-999-999-99-99", {
              completed: function(){
                phone_regexp( this );
              }
            })
            .on('change', function(){
              phone_regexp( $(this) );
            })
            .on('keyup', function(){
              phone_regexp( $(this) );
            });
          });
        })();

      :javascript
        $('#your_phones').on('mousedown', '.big_one', function(){
          //data collection
          var your_phone = $(this).closest('.your_phone');
          
          var numbers = [];
          var sorted_numbers = [];
          your_phone.find('.your_phone_number .for_js .number').each(function(i){
            var t = $(this);
            var number = { i: i, number: t.text(), place: t.data('place'), points_to_first: parseInt(t.data('points-to-first')) };
            numbers.push(number);

            if( number.points_to_first != '-1' ){
              sorted_numbers.push(number);
            }
          });
          sorted_numbers.sort(function(a,b){ return a.points_to_first - b.points_to_first });

          //data representation
          var active_voting_popup = $('#Active_Voting_Popup');
          active_voting_popup.find('.js_phone_id').val( your_phone.data('id') );

            //leader change
            var leader_compare = active_voting_popup.find('.leader_compare .for_js');

            leader_compare.empty();

            for( var i=0; i<10; i++ ){
              leader_compare.append(
                '<div class="number number_'+ i +'" data-place="'+ numbers[i].place +'">\
                  <div class="place place_'+ i +'">\
                    <div class="triangle"></div>\
                    '+ numbers[i].place +' место\
                  </div>\
                  '+ numbers[i].number +'\
                </div>'
              );
            }

            //phones change
            var voting_phones = active_voting_popup.find('.Voting_Phones');

            voting_phones.children('.your_phone').remove();

            var phone_clone = your_phone.clone();
            phone_clone.find('.your_phone_place').remove();
            phone_clone.find('.matches').html("<span class='js_points'></span> голосов за <span class='js_matches'></span>");

            var points_total = 0;

            for( 
              var 
                matches_total = 10 - sorted_numbers.length,
                clone_of_clone=phone_clone,
                number, 
                i=0; i<sorted_numbers.length; i++ 
            ){
              number = sorted_numbers[i];
              clone_of_clone = clone_of_clone.clone();
              points_total += number.points_to_first;
              matches_total ++;

              clone_of_clone.find('.matches .js_points').text( points_total );
              clone_of_clone.find('.big_one').data( 'points', points_total );

              if( i == sorted_numbers.length - 1 ){
                clone_of_clone.find('.matches .js_matches').text( 'место лидера' );
                clone_of_clone.addClass('phone_to_leader');

              } else {
                clone_of_clone.find('.matches .js_matches').text( matches_total + ' совпадений' );
                clone_of_clone.find('.your_phone_number .for_js .number').eq( number.i ).attr('data-place', '1');
              }

              voting_phones.prepend( clone_of_clone );
            }

          //popup show
          var popup = $('#app_smoke, #app_popup_absolute');
          popup.fadeIn( 500 );

          $('#Active_Voting_Popup .cross').one('mousedown', function(){
            popup.fadeOut( 500 );
          });
        });

- content_for :layout_bottom do
  #app_smoke

  #app_popup_absolute
    .app_div
      .popup#Active_Voting_Popup
        .cross &#10006;
        %h1 Голосование за номер
        .leader_compare
          .number.number__ 7

          .for_js

        .Voting_Phones

          .your_phones_header
            Укажите свое количество голосов

          .row.choose_yourself
          = form_tag voting_spend_votes_path(@voting), method: 'put',
            remote: true, format: :json,
            class: 'form row choose_yourself' do
            = hidden_field_tag :phone_id, nil, class: 'js_phone_id'
            .col.choose_votes
              .choose_votes_changer.minus -
              = text_field_tag :points
              .choose_votes_changer.plus +
            = submit_tag 'Проголосовать за этот номер', class: 'col'

  :javascript
    $('#Active_Voting_Popup .Voting_Phones').on('mousedown', '.big_one', function(){
      $('#Active_Voting_Popup .choose_votes input').val( $(this).data('points') );
      return false;
    });

    $('#Active_Voting_Popup .Voting_Phones').on('mousedown', '.choose_votes_changer', function(){
      var input = $(this).siblings('input');
      input.val( 
        Math.max( 
          ( parseInt( input.val() ) || 0 ) 
          + 
          ( ( $(this).hasClass('plus') ) ? 100 : -100 ), 
          0 
        ) 
      );
      return false;
    });

    $('#Active_Voting_Popup form').on( "ajax:success", function(e, data){
      if( data._success ){
        window.location.href = window.location.href;
      }
    });