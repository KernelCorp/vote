.voting_new
  h1
    - if @voting.id.blank?
      = t('organization.poll.create')
      /.switcher class=( @voting.class == MonetaryVoting ? 'first' : 'second' )
      /  .elem.first
      /    = link_to t('organization.poll.type.first'), '?type=monetary', :class => 'twhite'
      /  .elem.second
      /    = link_to t('organization.poll.type.second'), '?type=other', :class => 'twhite'
    - else
      = t('organization.poll.edit')

  = form_for @voting, as: 'voting', url: ( @voting.new_record? ? nil : voting_path(@voting) ),
    html: { class: 'form',
            name: 'create_monetary_poll',
            multipart: true,
            data: { type: 'json', created: t('voting.new.created'), cannot: t('voting.status.cannot_update_voting') } },
    remote: true do |f|

    .td.voting_form
      = f.hidden_field :type, value: ( @voting.is_a?(MonetaryVoting) ? :monetary_voting : :other_voting ) if @voting.new_record?

      a.big.button href=organization_path style='width: 110px; margin-top: 15px;' = t('organization.poll.go_back_to_list')

      .voting_rectangle.voting_basic
        h3= t 'organization.poll.h3.prize'
        .tr= inp f, :name
        .tr= inp f, :description, type: :text_area, i_options: { rows: 5, class: 'tinymce' }


      .voting_rectangle_grey.voting_files
        h3.tr Дизайн лэндинга

        .tr
          .td
            .td.loadable
              = f.label :prize, t('organization.poll.prize.description')
              .button data={ delete: t('organtization.poll.prize.photo.delete') }
                = t 'organization.poll.prize.photo.load'
                = f.file_field :prize, :accept => 'image/*'
              .tgrey= t 'organization.poll.prize.photo.size'
            .td.loaded style=voting_image( @voting.prize, '220x165' )
          .td
            .td.loadable
              = f.label :brand, t('organization.poll.brand.description')
              .button data={ delete: t('organtization.poll.brand.photo.delete') }
                = t 'organization.poll.brand.photo.load'
                = f.file_field :brand, :accept => 'image/*'
              .tgrey= t 'organization.poll.brand.photo.size'
            .td.loaded style=voting_image( @voting.brand, '200x70' )
        .tr
          .td
            .td.loadable
              = f.label :prize1
              .button data={ delete: t('organtization.poll.prize.photo.delete') }
                = t 'organization.poll.prize.photo.load'
                = f.file_field :prize1, :accept => 'image/*'
              .tgrey= t 'organization.poll.prize.photo.size'
            .td.loaded style=voting_image( @voting.prize1, '220x165' )
          .td
            .td.loadable
              = f.label :prize2
              .button data={ delete: t('organtization.poll.prize.photo.delete') }
                = t 'organization.poll.brand.photo.load'
                = f.file_field :prize2, :accept => 'image/*'
              .tgrey= t 'organization.poll.prize.photo.size'
            .td.loaded style=voting_image( @voting.prize2, '220x165' )
        .tr
          .td
            .td.loadable
              = f.label :prize3
              .button data={ delete: t('organtization.poll.prize.photo.delete') }
                = t 'organization.poll.prize.photo.load'
                = f.file_field :prize3, :accept => 'image/*'
              .tgrey= t 'organization.poll.prize.photo.size'
            .td.loaded style=voting_image( @voting.prize3, '220x165' )
          .td
            .td.loadable
              = f.label :custom_background
              .button.yellow data={ delete: t('organtization.poll.brand.photo.delete') }
                = t 'organization.poll.brand.photo.load'
                = f.file_field :custom_background, :accept => 'image/*'
              .tgrey= t 'organization.poll.custom_background.photo.size'
            .td.loaded style=voting_image( @voting.custom_background )

            - if @voting.custom_background.path
              javascript:
                $(function(){
                  $('.standard_background').get(0).style.backgroundImage = "url('#{@voting.custom_background.url}')";
                });

        .tr
          .td style='text-align: right;' = inp f, :custom_background_color, i_options: { id: 'custom_background_color' }
          .td= inp f, :custom_head_color, i_options: { id: 'custom_head_color' }

      javascript:
        $(function(){
          $('textarea[name="voting[description]"]').on('keyup change', function(){
            $('#voting_preview_description div').html( $(this).val().replace(/\n/g, '<br/>') );
          });

          var bodyheader = $('#bodyheader');
          var standard_background = $('.standard_background');

          $("#custom_background_color, #custom_head_color").spectrum({
            preferredFormat: "hex6",
            showInitial: true,
            chooseText: "#{ t'organization.poll.custom_style.head.ok' }",
            cancelText: "#{ t'organization.poll.custom_style.head.cancel' }",
            clickoutFiresChange: true,
            move: function( color ){
              $( $(this).attr('id') == 'custom_background_color' ? standard_background : bodyheader ).css('background-color', color.toHexString());
            }
          });

          if( $('#new_voting').length ){
            $("#custom_background_color").spectrum( 'set', '#e7e7e7' );
            $("#custom_head_color").spectrum( 'set', '#2c728d' );
          } else {
            bodyheader.css('background-color', $("#custom_head_color").spectrum('get').toHexString());
            standard_background.css('background-color', $("#custom_background_color").spectrum('get').toHexString());
          }

          $('#mini_button .button').on('mousedown', function(){
            var input = $('#voting_max_users_count');
            input.val(
              Math.max(
                ( parseInt( input.val() ) || 0 )
                +
                ( ( $(this).hasClass('up') ) ? 10 : -10 ),
                0
              )
            );
            return false;
          });
        });

      = render "/votings/new/#{ @voting.is_a?(MonetaryVoting) ? 'monetary' : 'other' }", f: f

      .tr
        = link_to t('organization.poll.go_back_to_list'), organization_path, class: 'button big', style: 'width: 110px;'
        - if can? :update, @voting
          = f.submit t('organization.poll.save_and_check'), class: 'button big', style: 'width: 360px; margin-left: 30px;'

    .td.voting_preview
      .voting_rectangle_grey
        h1= t 'organization.poll.preview_poll'

        #widgetframe
          .widget.active#changed_voting_prize
            img.widget_image src=voting_image_url( @voting.prize, '220x165' )

            .widget_body#changed_voting_brand
              img.widget_brand src=voting_image_url( @voting.brand, '200x70' )

              .widget_name_container
                .widget_name#changed_voting_name= @voting.name.nil? ? 'Название' : @voting.name

              = link_to t('widget.join'), 'javascript:{}', method: :post, :class => "button widget_button"

              - if @voting.is_a? MonetaryVoting
                .widget_chances
                  span= t 'widget.coincedence'
                  b.widget_star
                    = (0..10).to_a.shuffle.first
                  span= t 'widget.from'
                  b 10
                  = t 'widget.number'

      .voting_rectangle_grey#voting_preview_description
        h1 Описание
        div

coffee:
  tinyMCE.init
    selector: 'textarea.tinymce'

    setup: (ed)->
      ed.on 'keyup change', (e)->
        ed.save()
        $(ed.getElement()).trigger 'change'
