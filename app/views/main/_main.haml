- content_for :layout_bottom do
  #app_smoke
    #app_log.app_div
      #app_login.div_in_smoke
        .cross &#10006;
        %h1= t 'participant.login.title'
        = form_for Participant.new, 
          url: session_path('participant'), method: 'post', 
          remote: true, format: :json, 
          html: { id: 'fields', class: 'form', name: 'participant_login', 
            data: { login: t('participant.login.errors.wrong'), logout: t('participant.login.errors.logout') } } do |f|
          .row
            .col
              %label{ for: 'phone' }= t 'participant.login.phone'
              = f.hidden_field :login
              %input{ id: 'phone', name: 'no_name', type: 'text' }
            .col
              = link_to t('participant.login.forget'), '#', :id => "login_forget_pass"
              = inp f, :password, type: :password_field
          .row
            .col
              = link_to t('participant.logup.welcome'), '#', :class => "log_already_done_this"
            .col
              = f.submit t('participant.login.button')
          .form_error_enter

      #app_logup.div_in_smoke
        .cross &#10006;
        %h1= t 'participant.logup.title'
        = form_for Participant.new,
          url: registration_path('participant'), method: 'post',
          remote: true, format: :json,
          html: { id: 'fields', class: 'form', name: 'participant_logup',
            data: { logup: t('participant.logup.errors.wrong') } } do |f|
          .row
            .col
              %label{ for: 'phone' }= t 'participant.login.phone'
              %input{ id: 'phone', name: 'no_name', type: 'text' }
              = f.hidden_field :phone
              = f.hidden_field :parent_id, value: params[:parent] unless params[:parent].blank?
            .col
              = inp f, :password, type: :password_field
          .row
            .col
              = link_to t('participant.logup.already'), 'javascript:{}', :class => "log_already_done_this"
            .col
              = f.submit t('participant.logup.button')
          .form_error_enter

      #app_forget_phone.div_in_smoke
        .cross &#10006;
        %h1= t 'participant.forget_phone.title'
        = form_for Participant.new, 
          url: recover_pass_participant_path, method: 'post',
          remote: true, format: :json, 
          html: { id: 'fields', class: 'form', name: 'participant_logup' } do |f|
          .row
            .col.forget_phone_description
              = t 'participant.forget_phone.text.body'
              %a= t 'participant.forget_phone.text.service'
            .col
              %label{ for: 'phone' }= t 'participant.login.phone'
              %input{ id: 'phone', name: 'no_name', type: 'text' }
              = f.hidden_field :phone
              = f.submit t('participant.forget_phone.button')



  :javascript
    (function(){
      var smoke = $("#app_smoke");

      ajok_mask(
        $('#app_login, #app_logup, #app_forget_phone').find('#phone'),
        '+7(999)999-99-99',
        (/^\+7\((\d{3})\)(\d{3})-(\d{2})-(\d{2})$/),
        '+7(___)___-__-__'
      );

      smoke.on("mousedown", function(e){
        var t = $(e.target);
        if( e.target == this || t.parent('#app_smoke').length || t.hasClass('cross') ){
          smoke.fadeOut(500);
        }
      });

      function smoke_choose( eq ){
        if( !smoke.is(":visible") ) smoke.fadeIn(500);

        smoke.find('.div_in_smoke').eq(eq).fadeIn(500).siblings().fadeOut(300);
      }

      $("#app_menu_right").on("mousedown", function(e){
        smoke_choose( 0 );
      });

      smoke.find("#app_login .log_already_done_this").on("mousedown", function(e){
        smoke_choose( 1 );
      });

      smoke.find("#app_logup .log_already_done_this").on("mousedown", function(e){
        smoke_choose( 0 );
      });

      smoke.find("#login_forget_pass").on("mousedown", function(e){
        smoke_choose( 2 );
      });

      #{ 'smoke_choose( 0 );' if flash[:login_needed] }
    })();
